#include "windows.h"
#include "stdio.h"

// define type for the function imported from the DLL
// type: int; void as parameter indicates no parameters are passed
//      to the function
typedef int(__cdecl *TESTFUNC)(void);

void main() {
    HMODULE handle_dll;
    FARPROC function_address;
    TESTFUNC testFunc;
    BOOL return_bool;
    int result;

    handle_dll = LoadLibrary(TEXT("export.dll"));

    if (handle_dll == NULL) {
        printf("[!] Failed to import the DLL 'export.dll'.\n");
        printf("[!] Error: %i.\n", GetLastError());
        exit(1);
    } else {
        printf("[+] Successfully loaded the DLL 'export.dll'.\n");
    }

    function_address = GetProcAddress(handle_dll, "testFunc");
    
    if (function_address == NULL) {
        printf("[!] Failed to retrieve the address of 'testFunc' from the DLL 'export.dll'.\n");
        printf("[!] Error: %i", GetLastError());
        exit(1);
    } else {
        printf("[+] Successfully retrieved the address of the function 'testFunc' from the DLL 'export.dll'.\n");
    }

    testFunc = (TESTFUNC)function_address;
    result = testFunc();

    printf("[+] Result of the function 'testFunc': %i.\n", result);

    return_bool = FreeLibrary(handle_dll);

    if (!return_bool) {
        printf("[!] Failed the free the library using 'FreeLibrary'.\n");
        printf("[!] Error: %i.\n", GetLastError());
        exit(1);
    } else {
        printf("[+] Successfully freed the library using 'FreeLibrary'.\n");
    }
}